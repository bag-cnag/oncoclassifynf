/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'BCFTOOLS_NORM' {
        ext.args   = {" -m -any --write-index=tbi"}
        publishDir = [
            path: { "${params.outdir}/bcftools/norm" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'VCFANNO' {
        ext.args3 = '-p vcf'
    }

    withName: 'BCFTOOLS_PLUGINFILLTAGS' {
        ext.args2 = {"-t 'INFO/AF_gnomAD:1=float((INFO/AC_gnomAD)/(INFO/AN_gnomAD)),INFO/AF_grpmax:1=float((INFO/AC_grpmax)/(INFO/AN_grpmax)),INFO/AF_XX_gnomAD:1=float((INFO/AC_XX_gnomAD)/(INFO/AN_XX_gnomAD)),INFO/AF_XY_gnomAD:1=float((INFO/AC_XY_gnomAD)/(INFO/AN_XY_gnomAD))' "}
        publishDir = [
            path: { "${params.outdir}/bcftools/filltags" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'ONCOCLASSIFY' {
        ext.args   = {" -t vcf -p -v "}
        publishDir = [
            path: { "${params.outdir}/oncoclassify" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
